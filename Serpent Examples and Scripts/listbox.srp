# listbox.srp - examples of using Listbox


require "debug"
require "wxserpent"

// WXS_DEFAULT_WINDOW is the initial window created automatically
// when you run wxserpent. It's the parent of my_button.
Statictext(WXS_DEFAULT_WINDOW, "Single selection Listbox", 5, 5, 100, 20)
listbox = Listbox(WXS_DEFAULT_WINDOW, 5, 25, 100, 50, false)

def load_strings(lb):
    # strings in listbox'es are added using append():
    lb.append("cello")
    lb.append("flute")
    lb.append("trumpet")
    lb.append("violin")

load_strings(listbox)
listbox.method = 'listbox_handler' // function to call for user actions

print "There are", listbox.get_count(), "items in the Listbox:"
for i = 0 to listbox.get_count():
    print "    ", listbox.get_string(i)


def listbox_handler(obj, event, x, y)
    # handle listbox interaction events.
    # Every handler takes 4 parameters:
    #   obj - the listbox
    #   event - the interaction event type
    #           event is WXS_LISTBOX_SELECTED
    #           when there is a new selection
    #   x, y - depend on the event
    display "listbox event", obj, event, x, y, obj.get_count()
    display "handler", obj.get_selections(), obj.value()


// Listbox'es can allow multiple selections. Here is another listbox
// to illustrate this feature and how to use it
Statictext(WXS_DEFAULT_WINDOW, "Multiple selection Listbox", 5, 125, 100, 20)
listbox_m = Listbox(WXS_DEFAULT_WINDOW, 5, 150, 100, 50, true)
load_strings(listbox_m) // put the same strings in it
listbox_m.method = 'listbox_handler' // function to call for user actions

print "There are", listbox_m.get_count(), "items in the Listbox:"
for i = 0 to listbox_m.get_count():
    print "    ", listbox_m.get_string(i)
